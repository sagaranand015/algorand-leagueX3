{
    "hints": {
        "participate_with_user_squad": {
            "structs": {
                "output": {
                    "name": "UserLeagueData",
                    "elements": [
                        [
                            "league_data",
                            "byte[]"
                        ],
                        [
                            "squad_data",
                            "byte[]"
                        ],
                        [
                            "pos_number",
                            "uint64"
                        ],
                        [
                            "is_winner",
                            "bool"
                        ],
                        [
                            "prize_val",
                            "uint64"
                        ],
                        [
                            "prize_nft_id",
                            "uint64"
                        ],
                        [
                            "is_participated",
                            "bool"
                        ]
                    ]
                }
            }
        },
        "get_user_participation_data": {
            "structs": {
                "output": {
                    "name": "UserLeagueData",
                    "elements": [
                        [
                            "league_data",
                            "byte[]"
                        ],
                        [
                            "squad_data",
                            "byte[]"
                        ],
                        [
                            "pos_number",
                            "uint64"
                        ],
                        [
                            "is_winner",
                            "bool"
                        ],
                        [
                            "prize_val",
                            "uint64"
                        ],
                        [
                            "prize_nft_id",
                            "uint64"
                        ],
                        [
                            "is_participated",
                            "bool"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSAzMCA2NTUzNgpieXRlY2Jsb2NrIDB4IDB4NmM2NTYxNjc3NTY1NWY2ZTYxNmQ2NSAweDZjNjU2MTY3NzU2NTVmNmQ2NTc0NjE2NDYxNzQ2MSAweDYzNmY2ZDcwNjU3NDY5NzQ2OTZmNmU1ZjZlNjE2ZDY1IDB4MDAgMHgxNTFmN2M3NQp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGI0Y2FjNjYzIC8vICJib290c3RyYXAoYnl0ZVtdLGJ5dGVbXSxieXRlW10pdm9pZCIKPT0KYm56IG1haW5fbDcKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHhjMTMxMWUyMSAvLyAicGFydGljaXBhdGVfd2l0aF91c2VyX3NxdWFkKGFkZHJlc3MsYnl0ZVtdLGJ5dGVbXSkoYnl0ZVtdLGJ5dGVbXSx1aW50NjQsYm9vbCx1aW50NjQsdWludDY0LGJvb2wpIgo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDAyNWNmMjg1IC8vICJnZXRfdXNlcl9wYXJ0aWNpcGF0aW9uX2RhdGEoYWRkcmVzcykoYnl0ZVtdLGJ5dGVbXSx1aW50NjQsYm9vbCx1aW50NjQsdWludDY0LGJvb2wpIgo9PQpibnogbWFpbl9sNQplcnIKbWFpbl9sNToKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpjYWxsc3ViIGdldHVzZXJwYXJ0aWNpcGF0aW9uZGF0YV83CnN0b3JlIDcKYnl0ZWMgNSAvLyAweDE1MWY3Yzc1CmxvYWQgNwpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSA0CnR4bmEgQXBwbGljYXRpb25BcmdzIDMKc3RvcmUgNQpsb2FkIDMKbG9hZCA0CmxvYWQgNQpjYWxsc3ViIHBhcnRpY2lwYXRld2l0aHVzZXJzcXVhZF82CnN0b3JlIDYKYnl0ZWMgNSAvLyAweDE1MWY3Yzc1CmxvYWQgNgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDMKc3RvcmUgMgpsb2FkIDAKbG9hZCAxCmxvYWQgMgpjYWxsc3ViIGJvb3RzdHJhcF81CmludGNfMSAvLyAxCnJldHVybgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxNAp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBPcHRJbgo9PQpibnogbWFpbl9sMTMKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDQgLy8gVXBkYXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDEyCmVycgptYWluX2wxMjoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzMKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEzOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl80CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzEKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfMDoKcHJvdG8gMSAxCmZyYW1lX2RpZyAtMQpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBjcmVhdGUKY3JlYXRlXzE6CnByb3RvIDAgMApieXRlY18xIC8vICJsZWFndWVfbmFtZSIKYnl0ZWNfMCAvLyAiIgphcHBfZ2xvYmFsX3B1dApieXRlY18yIC8vICJsZWFndWVfbWV0YWRhdGEiCmJ5dGVjXzAgLy8gIiIKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMyAvLyAiY29tcGV0aXRpb25fbmFtZSIKYnl0ZWNfMCAvLyAiIgphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV8yOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHVwZGF0ZQp1cGRhdGVfMzoKcHJvdG8gMCAwCnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV8yCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBvcHRfaW4Kb3B0aW5fNDoKcHJvdG8gMCAwCmludGNfMSAvLyAxCnJldHVybgoKLy8gYm9vdHN0cmFwCmJvb3RzdHJhcF81Ogpwcm90byAzIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzAKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18xIC8vICJsZWFndWVfbmFtZSIKZnJhbWVfZGlnIC0zCmV4dHJhY3QgMiAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzIgLy8gImxlYWd1ZV9tZXRhZGF0YSIKZnJhbWVfZGlnIC0yCmV4dHJhY3QgMiAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gImNvbXBldGl0aW9uX25hbWUiCmZyYW1lX2RpZyAtMQpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIHBhcnRpY2lwYXRlX3dpdGhfdXNlcl9zcXVhZApwYXJ0aWNpcGF0ZXdpdGh1c2Vyc3F1YWRfNjoKcHJvdG8gMyAxCmJ5dGVjXzAgLy8gIiIKZHVwCmludGNfMCAvLyAwCmR1cG4gMgpieXRlY18wIC8vICIiCmludGNfMCAvLyAwCmR1cApieXRlY18wIC8vICIiCmR1cAppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMCAvLyAiIgpkdXAKcHVzaGJ5dGVzIDB4MDAwMCAvLyAweDAwMDAKZnJhbWVfYnVyeSAxCmludGNfMCAvLyAwCmJ5dGVjXzEgLy8gImxlYWd1ZV9uYW1lIgphcHBfZ2xvYmFsX2dldF9leApzdG9yZSA5CnN0b3JlIDgKbG9hZCA5CmJ5dGVjXzEgLy8gImxlYWd1ZV9uYW1lIgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMQpleHRyYWN0IDIgMAo9PQohCiYmCi8vIFRoZSBhcHAgaGFzIG5vdCBiZWVuIGJvb3RzdHJhcGVkIHByb3Blcmx5LiBMZWFndWUgTmFtZSBtaXNzaW5nCmFzc2VydAppbnRjXzAgLy8gMApieXRlY18yIC8vICJsZWFndWVfbWV0YWRhdGEiCmFwcF9nbG9iYWxfZ2V0X2V4CnN0b3JlIDExCnN0b3JlIDEwCmxvYWQgMTEKYnl0ZWNfMiAvLyAibGVhZ3VlX21ldGFkYXRhIgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMQpleHRyYWN0IDIgMAo9PQohCiYmCi8vIFRoZSBhcHAgaGFzIG5vdCBiZWVuIGJvb3RzdHJhcGVkIHByb3Blcmx5LiBMZWFndWUgTWV0YWRhdGEgbWlzc2luZwphc3NlcnQKaW50Y18wIC8vIDAKYnl0ZWNfMyAvLyAiY29tcGV0aXRpb25fbmFtZSIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgMTMKc3RvcmUgMTIKbG9hZCAxMwpieXRlY18zIC8vICJjb21wZXRpdGlvbl9uYW1lIgphcHBfZ2xvYmFsX2dldApmcmFtZV9kaWcgMQpleHRyYWN0IDIgMAo9PQohCiYmCi8vIFRoZSBhcHAgaGFzIG5vdCBiZWVuIGJvb3RzdHJhcGVkIHByb3Blcmx5LiBDb21wZWl0aW9uIG5hbWUgbWlzc2luZwphc3NlcnQKZnJhbWVfZGlnIC0zCmJveF9nZXQKc3RvcmUgMTUKc3RvcmUgMTQKbG9hZCAxNQpibnogcGFydGljaXBhdGV3aXRodXNlcnNxdWFkXzZfbDIKaW50Y18wIC8vIDAKZnJhbWVfYnVyeSAyCmludGNfMCAvLyAwCmZyYW1lX2J1cnkgMwppbnRjXzEgLy8gMQpmcmFtZV9idXJ5IDQKZnJhbWVfZGlnIC0yCmZyYW1lX2J1cnkgOQpmcmFtZV9kaWcgOQpmcmFtZV9idXJ5IDgKaW50Y18yIC8vIDMwCmZyYW1lX2J1cnkgNgpmcmFtZV9kaWcgNgpmcmFtZV9kaWcgOQpsZW4KKwpmcmFtZV9idXJ5IDcKZnJhbWVfZGlnIDcKaW50Y18zIC8vIDY1NTM2CjwKYXNzZXJ0CmZyYW1lX2RpZyA2Cml0b2IKZXh0cmFjdCA2IDAKZnJhbWVfZGlnIC0xCmZyYW1lX2J1cnkgOQpmcmFtZV9kaWcgOApmcmFtZV9kaWcgOQpjb25jYXQKZnJhbWVfYnVyeSA4CmZyYW1lX2RpZyA3CmZyYW1lX2J1cnkgNgpmcmFtZV9kaWcgNgppdG9iCmV4dHJhY3QgNiAwCmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApieXRlYyA0IC8vIDB4MDAKaW50Y18wIC8vIDAKZnJhbWVfZGlnIDMKc2V0Yml0CmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApieXRlYyA0IC8vIDB4MDAKaW50Y18wIC8vIDAKZnJhbWVfZGlnIDQKc2V0Yml0CmNvbmNhdApmcmFtZV9kaWcgOApjb25jYXQKZnJhbWVfYnVyeSA1CmZyYW1lX2RpZyAtMwpib3hfZGVsCnBvcApmcmFtZV9kaWcgLTMKZnJhbWVfZGlnIDUKYm94X3B1dApmcmFtZV9kaWcgLTIKZnJhbWVfYnVyeSAxMwpmcmFtZV9kaWcgMTMKZnJhbWVfYnVyeSAxMgppbnRjXzIgLy8gMzAKZnJhbWVfYnVyeSAxMApmcmFtZV9kaWcgMTAKZnJhbWVfZGlnIDEzCmxlbgorCmZyYW1lX2J1cnkgMTEKZnJhbWVfZGlnIDExCmludGNfMyAvLyA2NTUzNgo8CmFzc2VydApmcmFtZV9kaWcgMTAKaXRvYgpleHRyYWN0IDYgMApmcmFtZV9kaWcgLTEKZnJhbWVfYnVyeSAxMwpmcmFtZV9kaWcgMTIKZnJhbWVfZGlnIDEzCmNvbmNhdApmcmFtZV9idXJ5IDEyCmZyYW1lX2RpZyAxMQpmcmFtZV9idXJ5IDEwCmZyYW1lX2RpZyAxMAppdG9iCmV4dHJhY3QgNiAwCmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApieXRlYyA0IC8vIDB4MDAKaW50Y18wIC8vIDAKZnJhbWVfZGlnIDMKc2V0Yml0CmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApmcmFtZV9kaWcgMgppdG9iCmNvbmNhdApieXRlYyA0IC8vIDB4MDAKaW50Y18wIC8vIDAKZnJhbWVfZGlnIDQKc2V0Yml0CmNvbmNhdApmcmFtZV9kaWcgMTIKY29uY2F0CmZyYW1lX2J1cnkgMApiIHBhcnRpY2lwYXRld2l0aHVzZXJzcXVhZF82X2wzCnBhcnRpY2lwYXRld2l0aHVzZXJzcXVhZF82X2wyOgpsb2FkIDE0CmZyYW1lX2J1cnkgMApwYXJ0aWNpcGF0ZXdpdGh1c2Vyc3F1YWRfNl9sMzoKcmV0c3ViCgovLyBnZXRfdXNlcl9wYXJ0aWNpcGF0aW9uX2RhdGEKZ2V0dXNlcnBhcnRpY2lwYXRpb25kYXRhXzc6CnByb3RvIDEgMQpieXRlY18wIC8vICIiCmZyYW1lX2RpZyAtMQpib3hfZ2V0CnN0b3JlIDE3CnN0b3JlIDE2CmxvYWQgMTcKYXNzZXJ0CmxvYWQgMTYKZnJhbWVfYnVyeSAwCnJldHN1Yg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {},
            "reserved": {}
        },
        "global": {
            "declared": {
                "league_name": {
                    "type": "bytes",
                    "key": "league_name",
                    "descr": "Name of the league"
                },
                "league_metadata": {
                    "type": "bytes",
                    "key": "league_metadata",
                    "descr": "Link to the IPFS file containing the league metadata"
                },
                "competition_name": {
                    "type": "bytes",
                    "key": "competition_name",
                    "descr": "Name of the Competition/Match which is in progress"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "LeagueX3",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "league_name"
                    },
                    {
                        "type": "byte[]",
                        "name": "league_metadata"
                    },
                    {
                        "type": "byte[]",
                        "name": "competition_name"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "participate_with_user_squad",
                "args": [
                    {
                        "type": "address",
                        "name": "user_addr"
                    },
                    {
                        "type": "byte[]",
                        "name": "league_data"
                    },
                    {
                        "type": "byte[]",
                        "name": "squad_data"
                    }
                ],
                "returns": {
                    "type": "(byte[],byte[],uint64,bool,uint64,uint64,bool)"
                },
                "desc": "Adds a new squad link to the box storage keyed by user address"
            },
            {
                "name": "get_user_participation_data",
                "args": [
                    {
                        "type": "address",
                        "name": "user_addr"
                    }
                ],
                "returns": {
                    "type": "(byte[],byte[],uint64,bool,uint64,uint64,bool)"
                },
                "desc": "Returns the participation data in the box storage for the user"
            }
        ],
        "networks": {}
    }
}