#pragma version 8
intcblock 0 1 28
bytecblock 0x 0x6c65616775655f6e616d65 0x6c65616775655f6d65746164617461 0x636f6d7065746974696f6e5f6e616d65 0x00 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xb4cac663 // "bootstrap(byte[],byte[],byte[])void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x9ddde96f // "participate_with_user_squad(byte[])(byte[],uint64,bool,uint64,uint64,bool)"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xd8081b56 // "get_user_participation_data()(byte[],uint64,bool,uint64,uint64,bool)"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getuserparticipationdata_7
store 4
bytec 5 // 0x151f7c75
load 4
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub participatewithusersquad_6
store 3
bytec 5 // 0x151f7c75
load 3
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
store 1
txna ApplicationArgs 3
store 2
load 0
load 1
load 2
callsub bootstrap_5
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
intc_1 // OptIn
==
bnz main_l13
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_3
intc_1 // 1
return
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_4
intc_1 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_1
intc_1 // 1
return

// auth_only
authonly_0:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// create
create_1:
proto 0 0
bytec_1 // "league_name"
bytec_0 // ""
app_global_put
bytec_2 // "league_metadata"
bytec_0 // ""
app_global_put
bytec_3 // "competition_name"
bytec_0 // ""
app_global_put
retsub

// auth_only
authonly_2:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// update
update_3:
proto 0 0
txn Sender
callsub authonly_2
// unauthorized
assert
intc_1 // 1
return

// opt_in
optin_4:
proto 0 0
intc_1 // 1
return

// bootstrap
bootstrap_5:
proto 3 0
txn Sender
callsub authonly_0
// unauthorized
assert
bytec_1 // "league_name"
frame_dig -3
extract 2 0
app_global_put
bytec_2 // "league_metadata"
frame_dig -2
extract 2 0
app_global_put
bytec_3 // "competition_name"
frame_dig -1
extract 2 0
app_global_put
retsub

// participate_with_user_squad
participatewithusersquad_6:
proto 1 1
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
pushbytes 0x0000 // 0x0000
frame_bury 1
intc_0 // 0
bytec_1 // "league_name"
app_global_get_ex
store 6
store 5
load 6
bytec_1 // "league_name"
app_global_get
frame_dig 1
extract 2 0
==
!
&&
// The app has not been bootstraped properly. League Name missing
assert
intc_0 // 0
bytec_2 // "league_metadata"
app_global_get_ex
store 8
store 7
load 8
bytec_2 // "league_metadata"
app_global_get
frame_dig 1
extract 2 0
==
!
&&
// The app has not been bootstraped properly. League Metadata missing
assert
intc_0 // 0
bytec_3 // "competition_name"
app_global_get_ex
store 10
store 9
load 10
bytec_3 // "competition_name"
app_global_get
frame_dig 1
extract 2 0
==
!
&&
// The app has not been bootstraped properly. Compeition name missing
assert
txn Sender
box_get
store 12
store 11
load 12
bnz participatewithusersquad_6_l2
intc_0 // 0
frame_bury 2
intc_0 // 0
frame_bury 3
intc_1 // 1
frame_bury 4
frame_dig -1
frame_bury 9
frame_dig 9
frame_bury 8
intc_2 // 28
frame_bury 6
frame_dig 6
itob
extract 6 0
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 2
itob
concat
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 4
setbit
concat
frame_dig 8
concat
frame_bury 5
txn Sender
box_del
pop
txn Sender
frame_dig 5
box_put
frame_dig -1
frame_bury 13
frame_dig 13
frame_bury 12
intc_2 // 28
frame_bury 10
frame_dig 10
itob
extract 6 0
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 3
setbit
concat
frame_dig 2
itob
concat
frame_dig 2
itob
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 4
setbit
concat
frame_dig 12
concat
frame_bury 0
b participatewithusersquad_6_l3
participatewithusersquad_6_l2:
load 11
frame_bury 0
participatewithusersquad_6_l3:
retsub

// get_user_participation_data
getuserparticipationdata_7:
proto 0 1
bytec_0 // ""
txn Sender
box_get
store 14
store 13
load 14
assert
load 13
frame_bury 0
retsub